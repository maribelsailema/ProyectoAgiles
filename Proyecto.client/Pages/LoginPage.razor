@page "/"
@layout LoginLayout

@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject HttpClient Http

<div class="login-box">
    <h2 class="login-title">Bienvenido</h2>
    <p class="login-subtitle">Ingrese sus credenciales</p>

    <EditForm Model="@LoginModel" OnValidSubmit="@HandleLogin">
        <DataAnnotationsValidator />

        <div class="form-group">
            <label class="form-label" for="username">Usuario</label>
            <i class="bi bi-person-fill"></i>
            <InputText id="username" class="form-control" @bind-Value="LoginModel.Username" />
            <ValidationMessage For="@(() => LoginModel.Username)" class="validation-message" />
        </div>

        <div class="form-group">
            <label class="form-label" for="password">Contraseña</label>
            <i class="bi bi-lock-fill"></i>
            <InputText id="password" type="password" class="form-control" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(() => LoginModel.Password)" class="validation-message" />
        </div>

        <br />
        <button type="submit" class="login-button">Iniciar sesión</button>
    </EditForm>
</div>

@code {
    private LoginRequest LoginModel { get; set; } = new();

    private async Task HandleLogin()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/auth/login", LoginModel);

            if (response.IsSuccessStatusCode)
            {
                Navigation.NavigateTo("/home");
            }
            else
            {
                Console.WriteLine("Error en el login");
            }
        }
        catch (Exception)
        {
            Console.WriteLine("Error de conexión");
        }
    }

    public class LoginRequest
    {
        [Required(ErrorMessage = "Ingrese el usuario")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "Ingrese la contraseña")]
        public string Password { get; set; } = string.Empty;
    }
}
