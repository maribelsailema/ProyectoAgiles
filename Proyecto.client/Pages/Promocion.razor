@page "/promocion"
@inject HttpClient Http

<div class="contenido-promocion">
    @if (cargando)
    {
        <div class="text-center mt-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
            <p>Cargando información de promoción...</p>
        </div>
    }
    else if (error)
    {
        <div class="alert alert-danger mt-5">
            Error al cargar los datos. Por favor intente nuevamente.
        </div>
    }
    else
    {
        <div class="container">
            <div class="current-position">
                <h3><i class="bi bi-info-circle"></i> Tu posición actual: <strong>@posicionActual.Nombre (@posicionActual.Codigo)</strong></h3>
                <p class="text-muted">@posicionActual.Mensaje</p>
            </div>

            <div class="table-responsive">
                <table class="table table-hover promotion-table">
                    <thead>
                        <tr>
                            <th>Tipo de Rol</th>
                            <th>Tiempo en Rol</th>
                            <th># de Obras</th>
                            <th>Puntaje Evaluación</th>
                            <th>Cap. Cursos Aprob.</th>
                            <th>Investigación</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var nivel in nivelesDisponibles)
                        {
                            <tr class="@(nivel.PuedePostular ? "" : "disabled-row")">
                                <td>@nivel.Codigo</td>
                                <td>@nivel.TiempoRequerido años</td>
                                <td>@nivel.ObrasRequeridas</td>
                                <td>@nivel.PuntajeMinimo%</td>
                                <td>@nivel.HorasCapacitacion horas</td>
                                <td>@nivel.MesesInvestigacion meses</td>
                                <td>
                                    @if (nivel.PuedePostular)
                                    {
                                        <button class="btn-postular" @onclick="() => MostrarConfirmacion(nivel.Codigo)">
                                            <i class="bi bi-send-check"></i> Postular
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn-disabled" disabled>
                                            <i class="bi bi-lock"></i> No disponible
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="requirements-info mt-4">
                <h4><i class="bi bi-card-checklist"></i> Requisitos para postulación:</h4>
                <ul>
                    @foreach (var requisito in requisitos)
                    {
                        <li>@requisito</li>
                    }
                </ul>
            </div>
        </div>
    }
</div>

<!-- Modal de Confirmación -->
@if (mostrarModal)
{
    <div class="modal-backdrop show"></div>
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Postulación</h5>
                    <button type="button" class="btn-close" @onclick="CerrarModal"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro que deseas postularte al puesto de @nivelSeleccionado? Solo podrás postularte una vez.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CerrarModal">Cancelar</button>
                    <button type="button" class="btn btn-primary" @onclick="ConfirmarPostulacion">Confirmar</button>
                </div>
            </div>
        </div>
    </div>
}

<style>

    .contenido-promocion {
        padding: 2rem 1rem;
        min-height: 60vh;
        text-align: left;
    }

    .current-position {
        background-color: #76a5af;
        padding: 1.5rem;
        border-radius: 10px;
        margin-bottom: 2rem;
        border-left: 5px solid #76a5af;
    }

    .promotion-table {
        background-color: white;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

        .promotion-table th {
            background-color: #76a5af;
            color: white;
            font-weight: 500;
        }

        .promotion-table td, .promotion-table th {
            vertical-align: middle;
            text-align: center;
            padding: 1rem;
        }

    .btn-postular {
        padding: 0.5rem 1rem;
        background-color: #28a745;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 0.9rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

        .btn-postular:hover {
            background-color: #218838;
            transform: translateY(-2px);
        }

    .btn-disabled {
        padding: 0.5rem 1rem;
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 0.9rem;
        cursor: not-allowed;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

    .disabled-row {
        opacity: 0.7;
        background-color: #f8f9fa;
    }

    .requirements-info {
        background-color: #f8f9fa;
        padding: 1.5rem;
        border-radius: 10px;
        margin-top: 2rem;
    }

        .requirements-info ul {
            padding-left: 1.5rem;
            margin-top: 1rem;
        }

        .requirements-info li {
            margin-bottom: 0.5rem;
        }

    @@media (max-width: 768px) {
        .promotion-table {
            font-size: 0.9rem;
        }

            .promotion-table td, .promotion-table th {
                padding: 0.5rem;
            }

        .btn-postular, .btn-disabled {
            padding: 0.3rem 0.6rem;
            font-size: 0.8rem;
        }
    }

    /* Estilos para el modal */
    .modal-backdrop {
        opacity: 0.5;
    }

    .modal {
        backdrop-filter: blur(2px);
    }
</style>

@code {
    // Estado del componente
    private bool cargando = true;
    private bool error = false;
    private bool mostrarModal = false;
    private string nivelSeleccionado = string.Empty;

    // Datos que vendrán de la API
    private PosicionActual posicionActual = new();
    private List<NivelPromocion> nivelesDisponibles = new();
    private List<string> requisitos = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Simular carga de datos (en tu caso serán llamadas HTTP reales)
            await CargarDatos();
        }
        catch
        {
            error = true;
        }
        finally
        {
            cargando = false;
        }
    }

    private async Task CargarDatos()
    {
        // ESTO ES SOLO EJEMPLO - DEBES REEMPLAZARLO CON LLAMADAS REALES A TU API
      

        requisitos = new List<string>
        {
            "Haber cumplido el tiempo mínimo en el puesto actual (4 años como DT1)",
            "Tener al menos 1 obra publicada o equivalente",
            "Haber obtenido un puntaje mínimo de 75% en la última evaluación",
            "Haber completado 96 horas de capacitación aprobada",
            "Haber participado en investigación durante al menos 12 meses"
        };
    }

    private void MostrarConfirmacion(string nivel)
    {
        nivelSeleccionado = nivel;
        mostrarModal = true;
    }

    private void CerrarModal()
    {
        mostrarModal = false;
    }

    private async Task ConfirmarPostulacion()
    {
        mostrarModal = false;
        // Aquí iría la lógica para enviar la postulación a la API
        // await Http.PostAsJsonAsync("api/promocion/postular", new { Nivel = nivelSeleccionado });

        // Simulación de éxito
        nivelesDisponibles.ForEach(n => n.PuedePostular = false);
        StateHasChanged();
    }

    // Clases para el modelo de datos
    public class PosicionActual
    {
        public string Codigo { get; set; } = string.Empty;
        public string Nombre { get; set; } = string.Empty;
        public string Mensaje { get; set; } = string.Empty;
    }

    public class NivelPromocion
    {
        public string Codigo { get; set; } = string.Empty;
        public int TiempoRequerido { get; set; }
        public int ObrasRequeridas { get; set; }
        public int PuntajeMinimo { get; set; }
        public int HorasCapacitacion { get; set; }
        public int MesesInvestigacion { get; set; }
        public bool PuedePostular { get; set; }
    }
}